{"meta":{"title":"Orange","subtitle":"个人博客","description":"","author":"Orange","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2020-07-14T07:43:10.000Z","updated":"2020-07-14T07:43:37.642Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""}],"posts":[{"title":"hexo +github+阿里云全站加速搭建个人博客","slug":"hexo+github+阿里云全站加速","date":"2020-07-14T16:00:00.000Z","updated":"2020-07-15T07:18:31.038Z","comments":true,"path":"2020/07/15/hexo+github+阿里云全站加速/","link":"","permalink":"http://yoursite.com/2020/07/15/hexo+github+%E9%98%BF%E9%87%8C%E4%BA%91%E5%85%A8%E7%AB%99%E5%8A%A0%E9%80%9F/","excerpt":"","text":"1. 前言 1.1 准备工作 一个github账号 安装了 node.js 和 git，使用npm 安装好git 之后，右键打开git bash here输入git信息，下面信息可以填你自己的 git config --global user.email \"you@example.com\" git config --global user.name \"Your Name\" 2. 搭建博客 2.1 创建GitHub仓库 ​ 在github里新建一个你的用户名.github.io的仓库，必须是你的GitHub用户名,不然无效，这样将来可以访问你的地址 https://你的用户名.github.io 2.2 全局安装hexo ​ 你可以打开git bash here输入npm install -g hexo-cli 进行安装 2.3 初始化一个hexo项目 ​ 可以在桌面上新建一个文件夹叫做myblog用于以后在里面写博客再上传到github里，然后打开这个文件夹的cmd如下所示（以下命令都是在这个cmd中操作） 接着输入hexo init进行初始化项目,会生成如下目录 此时本地的仓库初始化完成了，你可以输入hexo server打开本地服务进行查看 2.4 部署到github 打开_congig.yml文件找到deploy进行如下配置： deploy: type: git repo: https://github.com/你的github用户名/你的github用户名.github.io.git branch: master 接着需要一个hexo插件来帮助我们推到github的仓库里面，安装插件： npm install hexo-deployer-git --save 最后只要输入： hexo clean hexo deploy 第一个命令用于清除缓存，第二个用于上传github仓库期间可能需要你登录一个github账号密码，之后写md博客的时候都需要使用这两个命令，这时候就已经部署成功了，打开https://你的用户名.github.io就可以访问了 2.5 更换主题皮肤 在hexo官网找到自己喜欢的theme主题，然后git clone到目录的theme里面 然后将主题名称配置在_congig.yml文件中： # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: 安装的主题名称 然后再利用hexo clean和hexo deploy上传到github里，之后本地进行的修改都要及时上传 3. 阿里云全站加速 ​ 为什么要使用阿里云全站加速呢，因为这样可以使得我们的博客访问的速度变得更快，当然觉得繁琐可以跳过这一部分 3.1 准备工作 购买一个域名，用来映射github域名（需要备案）可以先用域名加速 用阿里云购买一个全站加速，按量收费即可，基本不花钱 3.2 使用全站加速 首先需要添加域名 域名填写你的域名 源站信息选择IP,填写如下信息 上述信息是github的ip地址端口是443，需要填写四个，git pages会在这四个地址中变化 解析域名 打开解析添加一条记录，记录类型选择CNAME，主机记录按照你加速的域名填，根据下表： 记录值是刚刚全站加速添加域名的CNAME 之后添加即可。 与github域名绑定 在本地的`myblog`文件中的`source`目录创建一个`CNAME`文件，在里面用编辑器输入你在全站加速里面添加的域名。用`hexo deploy`上传到github就可以了。","categories":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://yoursite.com/tags/github/"},{"name":"阿里云","slug":"阿里云","permalink":"http://yoursite.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"}]},{"title":"Docker在linux系统安装","slug":"Docker在linux系统安装","date":"2020-07-14T14:09:53.000Z","updated":"2020-07-15T03:17:50.161Z","comments":true,"path":"2020/07/14/Docker在linux系统安装/","link":"","permalink":"http://yoursite.com/2020/07/14/Docker%E5%9C%A8linux%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/","excerpt":"","text":"Docker在linux系统安装 删除旧版本的docker目录文件 $ sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine 安装docker的仓库(repository) $ sudo yum install -y yum-utils $ sudo yum-config-manager \\ --add-repo \\ https://download.docker.com/linux/centos/docker-ce.repo 下载docker驱动 $ sudo yum install docker-ce docker-ce-cli containerd.io 启动docker $ sudo systemctl start docker 设置docker开机自启 $ sudo systemctl enable docker 查看镜像列表 $ sudo docker images 查看容器列表 $ sudo docker ps","categories":[{"name":"Docker","slug":"Docker","permalink":"http://yoursite.com/categories/Docker/"}],"tags":[{"name":"Docker","slug":"Docker","permalink":"http://yoursite.com/tags/Docker/"}]}],"categories":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/categories/hexo/"},{"name":"Docker","slug":"Docker","permalink":"http://yoursite.com/categories/Docker/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://yoursite.com/tags/github/"},{"name":"阿里云","slug":"阿里云","permalink":"http://yoursite.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"},{"name":"Docker","slug":"Docker","permalink":"http://yoursite.com/tags/Docker/"}]}